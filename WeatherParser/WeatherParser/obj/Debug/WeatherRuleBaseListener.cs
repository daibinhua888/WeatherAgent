//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Administrator\Documents\GitHub\WeatherAgent\WeatherParser\WeatherParser\g4\WeatherRule.g4 by ANTLR 4.5-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace WeatherParser.g4 {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IWeatherRuleListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5-SNAPSHOT")]
[System.CLSCompliant(false)]
public partial class WeatherRuleBaseListener : IWeatherRuleListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeatherRuleParser.compileUnit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompileUnit([NotNull] WeatherRuleParser.CompileUnitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeatherRuleParser.compileUnit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompileUnit([NotNull] WeatherRuleParser.CompileUnitContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="WeatherRuleParser.parse"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParse([NotNull] WeatherRuleParser.ParseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeatherRuleParser.parse"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParse([NotNull] WeatherRuleParser.ParseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="WeatherRuleParser.city_nday"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCity_nday([NotNull] WeatherRuleParser.City_ndayContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeatherRuleParser.city_nday"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCity_nday([NotNull] WeatherRuleParser.City_ndayContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="WeatherRuleParser.city"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCity([NotNull] WeatherRuleParser.CityContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeatherRuleParser.city"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCity([NotNull] WeatherRuleParser.CityContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="WeatherRuleParser.nday"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNday([NotNull] WeatherRuleParser.NdayContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeatherRuleParser.nday"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNday([NotNull] WeatherRuleParser.NdayContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="WeatherRuleParser.relativeExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelativeExpression([NotNull] WeatherRuleParser.RelativeExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeatherRuleParser.relativeExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelativeExpression([NotNull] WeatherRuleParser.RelativeExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="WeatherRuleParser.positiveExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPositiveExpression([NotNull] WeatherRuleParser.PositiveExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeatherRuleParser.positiveExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPositiveExpression([NotNull] WeatherRuleParser.PositiveExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="WeatherRuleParser.fixDayExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFixDayExpression([NotNull] WeatherRuleParser.FixDayExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeatherRuleParser.fixDayExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFixDayExpression([NotNull] WeatherRuleParser.FixDayExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="WeatherRuleParser.monthly"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMonthly([NotNull] WeatherRuleParser.MonthlyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeatherRuleParser.monthly"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMonthly([NotNull] WeatherRuleParser.MonthlyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="WeatherRuleParser.date"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDate([NotNull] WeatherRuleParser.DateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeatherRuleParser.date"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDate([NotNull] WeatherRuleParser.DateContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="WeatherRuleParser.number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumber([NotNull] WeatherRuleParser.NumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeatherRuleParser.number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumber([NotNull] WeatherRuleParser.NumberContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="WeatherRuleParser.weather"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWeather([NotNull] WeatherRuleParser.WeatherContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeatherRuleParser.weather"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWeather([NotNull] WeatherRuleParser.WeatherContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="WeatherRuleParser.how"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHow([NotNull] WeatherRuleParser.HowContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeatherRuleParser.how"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHow([NotNull] WeatherRuleParser.HowContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="WeatherRuleParser.questionSymbol"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQuestionSymbol([NotNull] WeatherRuleParser.QuestionSymbolContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeatherRuleParser.questionSymbol"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQuestionSymbol([NotNull] WeatherRuleParser.QuestionSymbolContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace WeatherParser.g4
