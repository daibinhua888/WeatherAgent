//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Administrator\Documents\GitHub\WeatherAgent\WeatherParser\WeatherParser\g4\WeatherRule.g4 by ANTLR 4.5-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace WeatherParser.g4 {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="WeatherRuleParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5-SNAPSHOT")]
[System.CLSCompliant(false)]
public interface IWeatherRuleVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="WeatherRuleParser.compileUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompileUnit([NotNull] WeatherRuleParser.CompileUnitContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="WeatherRuleParser.parse"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParse([NotNull] WeatherRuleParser.ParseContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="WeatherRuleParser.city_nday"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCity_nday([NotNull] WeatherRuleParser.City_ndayContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="WeatherRuleParser.city"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCity([NotNull] WeatherRuleParser.CityContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="WeatherRuleParser.nday"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNday([NotNull] WeatherRuleParser.NdayContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="WeatherRuleParser.relativeExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRelativeExpression([NotNull] WeatherRuleParser.RelativeExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="WeatherRuleParser.positiveExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPositiveExpression([NotNull] WeatherRuleParser.PositiveExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="WeatherRuleParser.fixDayExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFixDayExpression([NotNull] WeatherRuleParser.FixDayExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="WeatherRuleParser.monthly"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMonthly([NotNull] WeatherRuleParser.MonthlyContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="WeatherRuleParser.date"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDate([NotNull] WeatherRuleParser.DateContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="WeatherRuleParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumber([NotNull] WeatherRuleParser.NumberContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="WeatherRuleParser.weather"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWeather([NotNull] WeatherRuleParser.WeatherContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="WeatherRuleParser.how"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHow([NotNull] WeatherRuleParser.HowContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="WeatherRuleParser.questionSymbol"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQuestionSymbol([NotNull] WeatherRuleParser.QuestionSymbolContext context);
}
} // namespace WeatherParser.g4
